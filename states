-----------------------------------------------------------------

State 1:
string		lookahead	alpha	X	beta	z	F
S::=.E$             	?		E	$	?	$
E::=.E+T            	$		E	+T	$	+
E::=.T              	$		T		$	$
E::=.E+T            	+		E	+T	+	+
E::=.T              	+		T		+	+
T::=.T*F            	$		T	*F	$	*
T::=.F              	$		F		$	$
T::=.T*F            	+		T	*F	+	*
T::=.F              	+		F		+	+
T::=.T*F            	*		T	*F	*	*
T::=.F              	*		F		*	*
F::=.(E)		$
F::=.i			$
F::=.(E)		+
F::=.i			+
F::=.(E)		*
F::=.i			*


-----------------------------------
Condensed state: 
S::=.E$             	?		E	$	?	$
E::=.E+T            	$, +		E	+T	$, +	+
E::=.T              	$, +		T		$, +	$
T::=.T*F            	$, +, *		T	*F	$, +, *	*
T::=.F              	$, +, *		F		$, +, *	$
F::=.(E)		$, +, *
F::=.i			$, +, *

Shifts: 
E: 2
T: 3
F: 4
(: 5
i: 6

-----------------------------------------------------------------

State 2:
string		lookahead	alpha	X	beta	z	F
S::=E.$			?
E::=E.+T		$
E::=E.+T		+


-----------------------------------
Condensed state: 
S::=E.$			?
E::=E.+T		$, +

Shifts: 
$: 7
+: 8

-----------------------------------------------------------------

State 3:
string		lookahead	alpha	X	beta	z	F
E::=T.			$
E::=T.			+
T::=T.*F		$
T::=T.*F		+
T::=T.*F		*


-----------------------------------
Condensed state: 
E::=T.			$, +
T::=T.*F		$, +, *

Shifts: 
*: 9

-----------------------------------------------------------------

State 4:
string		lookahead	alpha	X	beta	z	F
T::=F.			$
T::=F.			+
T::=F.			*


-----------------------------------
Condensed state: 
T::=F.			$, +, *


-----------------------------------------------------------------

State 5:
string		lookahead	alpha	X	beta	z	F
F::=(.E)            	$	(	E	)	$	)
F::=(.E)            	+	(	E	)	+	)
F::=(.E)            	*	(	E	)	*	)
E::=.E+T            	)		E	+T	)	+
E::=.T              	)		T		)	)
E::=.E+T            	+		E	+T	+	+
E::=.T              	+		T		+	+
T::=.T*F            	)		T	*F	)	*
T::=.F              	)		F		)	)
T::=.T*F            	+		T	*F	+	*
T::=.F              	+		F		+	+
T::=.T*F            	*		T	*F	*	*
T::=.F              	*		F		*	*
F::=.(E)		)
F::=.i			)
F::=.(E)		+
F::=.i			+
F::=.(E)		*
F::=.i			*


-----------------------------------
Condensed state: 
F::=(.E)            	$, +, *	(	E	)	$, +, *	)
E::=.E+T            	), +		E	+T	), +	+
E::=.T              	), +		T		), +	)
T::=.T*F            	), +, *		T	*F	), +, *	*
T::=.F              	), +, *		F		), +, *	)
F::=.(E)		), +, *
F::=.i			), +, *

Shifts: 
E: 10
T: 11
F: 12
(: 13
i: 14

-----------------------------------------------------------------

State 6:
string		lookahead	alpha	X	beta	z	F
F::=i.			$
F::=i.			+
F::=i.			*


-----------------------------------
Condensed state: 
F::=i.			$, +, *


-----------------------------------------------------------------

State 7:
string		lookahead	alpha	X	beta	z	F
S::=E$.			?


-----------------------------------
Condensed state: 
S::=E$.			?


-----------------------------------------------------------------

State 8:
string		lookahead	alpha	X	beta	z	F
E::=E+.T            	$	E+	T		$	$
E::=E+.T            	+	E+	T		+	+
T::=.T*F            	$		T	*F	$	*
T::=.F              	$		F		$	$
T::=.T*F            	+		T	*F	+	*
T::=.F              	+		F		+	+
T::=.T*F            	*		T	*F	*	*
T::=.F              	*		F		*	*
F::=.(E)		$
F::=.i			$
F::=.(E)		+
F::=.i			+
F::=.(E)		*
F::=.i			*


-----------------------------------
Condensed state: 
E::=E+.T            	$, +	E+	T		$, +	$
T::=.T*F            	$, +, *		T	*F	$, +, *	*
T::=.F              	$, +, *		F		$, +, *	$
F::=.(E)		$, +, *
F::=.i			$, +, *

Shifts: 
T: 15
F: 4
(: 5
i: 6

-----------------------------------------------------------------

State 9:
string		lookahead	alpha	X	beta	z	F
T::=T*.F            	$	T*	F		$	$
T::=T*.F            	+	T*	F		+	+
T::=T*.F            	*	T*	F		*	*
F::=.(E)		$
F::=.i			$
F::=.(E)		+
F::=.i			+
F::=.(E)		*
F::=.i			*


-----------------------------------
Condensed state: 
T::=T*.F            	$, +, *	T*	F		$, +, *	$
F::=.(E)		$, +, *
F::=.i			$, +, *

Shifts: 
F: 16
(: 5
i: 6

-----------------------------------------------------------------

State 10:
string		lookahead	alpha	X	beta	z	F
F::=(E.)		$
F::=(E.)		+
F::=(E.)		*
E::=E.+T		)
E::=E.+T		+


-----------------------------------
Condensed state: 
F::=(E.)		$, +, *
E::=E.+T		), +

Shifts: 
): 17
+: 18

-----------------------------------------------------------------

State 11:
string		lookahead	alpha	X	beta	z	F
E::=T.			)
E::=T.			+
T::=T.*F		)
T::=T.*F		+
T::=T.*F		*


-----------------------------------
Condensed state: 
E::=T.			), +
T::=T.*F		), +, *

Shifts: 
*: 19

-----------------------------------------------------------------

State 12:
string		lookahead	alpha	X	beta	z	F
T::=F.			)
T::=F.			+
T::=F.			*


-----------------------------------
Condensed state: 
T::=F.			), +, *


-----------------------------------------------------------------

State 13:
string		lookahead	alpha	X	beta	z	F
F::=(.E)            	)	(	E	)	)	)
F::=(.E)            	+	(	E	)	+	)
F::=(.E)            	*	(	E	)	*	)
E::=.E+T            	)		E	+T	)	+
E::=.T              	)		T		)	)
E::=.E+T            	+		E	+T	+	+
E::=.T              	+		T		+	+
T::=.T*F            	)		T	*F	)	*
T::=.F              	)		F		)	)
T::=.T*F            	+		T	*F	+	*
T::=.F              	+		F		+	+
T::=.T*F            	*		T	*F	*	*
T::=.F              	*		F		*	*
F::=.(E)		)
F::=.i			)
F::=.(E)		+
F::=.i			+
F::=.(E)		*
F::=.i			*


-----------------------------------
Condensed state: 
F::=(.E)            	), +, *	(	E	)	), +, *	)
E::=.E+T            	), +		E	+T	), +	+
E::=.T              	), +		T		), +	)
T::=.T*F            	), +, *		T	*F	), +, *	*
T::=.F              	), +, *		F		), +, *	)
F::=.(E)		), +, *
F::=.i			), +, *

Shifts: 
E: 20
T: 11
F: 12
(: 13
i: 14

-----------------------------------------------------------------

State 14:
string		lookahead	alpha	X	beta	z	F
F::=i.			)
F::=i.			+
F::=i.			*


-----------------------------------
Condensed state: 
F::=i.			), +, *


-----------------------------------------------------------------

State 15:
string		lookahead	alpha	X	beta	z	F
E::=E+T.		$
E::=E+T.		+
T::=T.*F		$
T::=T.*F		+
T::=T.*F		*


-----------------------------------
Condensed state: 
E::=E+T.		$, +
T::=T.*F		$, +, *

Shifts: 
*: 9

-----------------------------------------------------------------

State 16:
string		lookahead	alpha	X	beta	z	F
T::=T*F.		$
T::=T*F.		+
T::=T*F.		*


-----------------------------------
Condensed state: 
T::=T*F.		$, +, *


-----------------------------------------------------------------

State 17:
string		lookahead	alpha	X	beta	z	F
F::=(E).		$
F::=(E).		+
F::=(E).		*


-----------------------------------
Condensed state: 
F::=(E).		$, +, *


-----------------------------------------------------------------

State 18:
string		lookahead	alpha	X	beta	z	F
E::=E+.T            	)	E+	T		)	)
E::=E+.T            	+	E+	T		+	+
T::=.T*F            	)		T	*F	)	*
T::=.F              	)		F		)	)
T::=.T*F            	+		T	*F	+	*
T::=.F              	+		F		+	+
T::=.T*F            	*		T	*F	*	*
T::=.F              	*		F		*	*
F::=.(E)		)
F::=.i			)
F::=.(E)		+
F::=.i			+
F::=.(E)		*
F::=.i			*


-----------------------------------
Condensed state: 
E::=E+.T            	), +	E+	T		), +	)
T::=.T*F            	), +, *		T	*F	), +, *	*
T::=.F              	), +, *		F		), +, *	)
F::=.(E)		), +, *
F::=.i			), +, *

Shifts: 
T: 21
F: 12
(: 13
i: 14

-----------------------------------------------------------------

State 19:
string		lookahead	alpha	X	beta	z	F
T::=T*.F            	)	T*	F		)	)
T::=T*.F            	+	T*	F		+	+
T::=T*.F            	*	T*	F		*	*
F::=.(E)		)
F::=.i			)
F::=.(E)		+
F::=.i			+
F::=.(E)		*
F::=.i			*


-----------------------------------
Condensed state: 
T::=T*.F            	), +, *	T*	F		), +, *	)
F::=.(E)		), +, *
F::=.i			), +, *

Shifts: 
F: 22
(: 13
i: 14

-----------------------------------------------------------------

State 20:
string		lookahead	alpha	X	beta	z	F
F::=(E.)		)
F::=(E.)		+
F::=(E.)		*
E::=E.+T		)
E::=E.+T		+


-----------------------------------
Condensed state: 
F::=(E.)		), +, *
E::=E.+T		), +

Shifts: 
): 23
+: 18

-----------------------------------------------------------------

State 21:
string		lookahead	alpha	X	beta	z	F
E::=E+T.		)
E::=E+T.		+
T::=T.*F		)
T::=T.*F		+
T::=T.*F		*


-----------------------------------
Condensed state: 
E::=E+T.		), +
T::=T.*F		), +, *

Shifts: 
*: 19

-----------------------------------------------------------------

State 22:
string		lookahead	alpha	X	beta	z	F
T::=T*F.		)
T::=T*F.		+
T::=T*F.		*


-----------------------------------
Condensed state: 
T::=T*F.		), +, *


-----------------------------------------------------------------

State 23:
string		lookahead	alpha	X	beta	z	F
F::=(E).		)
F::=(E).		+
F::=(E).		*


-----------------------------------
Condensed state: 
F::=(E).		), +, *


Note that the accept state is included here, increasing count by 1.
